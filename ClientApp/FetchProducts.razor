@using System.Text.Json

@page "/fetchproducts"
@using System.Net.Http.Json
@inject HttpClient Http

<h3>Product List</h3>

<ul>
    @if (products is not null)
    {
        foreach (var product in products)
        {
            <li>@product.Name - $@product.Price</li>
        }
    }
    else
    {
        <li>Loading...</li>
    }
</ul>

@code {
    private Product[]? products;

    protected override async Task OnInitializedAsync()
    {
        try
            {
                var response = await Http.GetAsync("/api/productlist");
                response.EnsureSuccessStatusCode();
                var json = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Raw JSON: {json}"); // See what you're working with
                products = JsonSerializer.Deserialize<Product[]>(json, new JsonSerializerOptions
{
                PropertyNameCaseInsensitive = true
});
            }
                catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
            }
    }

    public class Product
{
    public int Id { get; set; }
    public string Name { get; set; } = string.Empty;
    public double Price { get; set; }
    public int Stock { get; set; }
    public Category Category { get; set; } = new();
}

public class Category
{
    public int Id { get; set; }
    public string Name { get; set; } = string.Empty;
}
}